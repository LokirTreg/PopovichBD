@model BookViewModel

@{
    ViewBag.Title = "Книги";
    var pagedList = Html.PagedList(Model.book_Model.PagesInfo.ItemsCount, Model.book_Model.PagesInfo.ItemsPerPage, Model.book_Model.PagesInfo.CurrentPage,
        Model.book_Model.PagesInfo.DisplayedPages, pageNumber => Url.Action(Url.GetAction(), Model.book_Model.FilterModel.Merge(new
        {
            page = pageNumber
        })), new PagedListExtensions.PagedListRenderParams());
}
@if (User.IsInRole(nameof(UserRole.Developer)))
                    {
<div class="row">
	<div class="col-md-12">
		<div class="card mb-3">
			<div class="card-body">
				<a asp-action="Update" class="btn btn-outline-primary">Добавить</a>
			</div>
		</div>
	</div>
</div>
                    }

<div class="row">
    <div class="col-md-12">
        <div class="card mb-3">
            <div class="card-header" data-toggle="collapse" data-target="#filterBody" aria-expanded="false" aria-controls="filterBody">
                Параметры поиска
            </div>
            <div id="filterBody" class="collapse">
                <div class="card-body">
                    <partial name="_Filter" for="book_Model.FilterModel" />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
	<div class="col-md-12">
		@pagedList
	</div>
</div>

<div class="row">
	<div class="col-md-12">
		<div class="table-responsive">
			<table class="table table-striped">
				<tr>
					<th class="text-center">ID</th>
					<th class="text-center">Название книги</th>
					<th class="text-center">Тираж</th>
					<th class="text-center">Дата издания</th>
					<th class="text-center">Издатель</th>
					<th class="text-center">Авторы</th>
                    @if (User.IsInRole(nameof(UserRole.Developer)))
                    {
                        <th class="text-center">Действия</th>
                    }
                </tr>
                @foreach (var book in Model.book_Model.Objects)
                {
                    var book_author = Model.book_author_Model.Objects.Where(book_author => book_author.IdBook == book.Id).ToList();
                    var publisher = Model.publisher_Model.Objects.Where(publisher => publisher.Id == book.IdPublisher).ToList();
                    List<AuthorModel> author = new List<AuthorModel>();
                    <tr>
                        <td class="text-center">
                            @book.Id
                        </td>
                        <td class="text-center">
                            @book.Title
                        </td>
                        <td class="text-center">
                            @book.Circulation
                        </td>
                        <td class="text-center">
                            @book.YearOfPublish
                        </td>
                        <td class="text-center">
                            @Html.Raw(string.Join(", ", publisher.Select(s => string.Format("{0}", s.Title))))
                        </td>
                        <td class="text-center">
                            @foreach (var i in book_author)
                            {
                                author = Model.author_Model.Objects.Where(author => author.Id == i.IdAuthor).ToList();
                                <p>@author[0].Name</p>
                            }
                        </td>@if (User.IsInRole(nameof(UserRole.Developer)))
                        {
                            <td class="text-center">
                                <a asp-action="Update" asp-route-id="@book.Id">Изменить</a><br />
                            <a asp-action="Delete" asp-route-id="@book.Id" class="delete-object-button">Удалить</a>
                        </td>
                        }
                    </tr>
                }
			</table>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-md-12">
		@pagedList
	</div>
</div>
